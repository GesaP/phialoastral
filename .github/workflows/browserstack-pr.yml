name: BrowserStack PR

on:
  pull_request:
    types: [labeled, synchronize]
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'PR number to test'
        required: false
        type: string

concurrency:
  group: browserstack-pr-${{ github.event.pull_request.number || github.event.inputs.pr_number }}
  cancel-in-progress: true

jobs:
  # Check if we should run BrowserStack tests
  should-run:
    name: Check Trigger
    runs-on: ubuntu-latest
    outputs:
      should_run: ${{ steps.check.outputs.should_run }}
    steps:
      - name: Check conditions
        id: check
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "should_run=true" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event_name }}" == "pull_request" && "${{ contains(github.event.pull_request.labels.*.name, 'run-browserstack') }}" == "true" ]]; then
            echo "should_run=true" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event_name }}" == "pull_request" && "${{ github.event.action }}" == "synchronize" && "${{ contains(github.event.pull_request.labels.*.name, 'run-browserstack') }}" == "true" ]]; then
            echo "should_run=true" >> $GITHUB_OUTPUT
          else
            echo "should_run=false" >> $GITHUB_OUTPUT
          fi

  test:
    name: ${{ matrix.project }}
    needs: should-run
    if: needs.should-run.outputs.should_run == 'true'
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      fail-fast: false
      # IMPORTANT: max-parallel limits concurrent jobs to stay within BrowserStack limits
      max-parallel: 1  # Run sequentially to avoid exceeding 5 session limit
      matrix:
        project:
          # Reduced set for PR testing (faster feedback)
          - 'Chrome@latest-Windows'
          - 'Safari@latest-macOS'
          - 'iPhone-14-Pro'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9.14.4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          cache-dependency-path: phialo-design/pnpm-lock.yaml

      - name: Install dependencies
        run: |
          cd phialo-design
          pnpm install --frozen-lockfile

      - name: Install Playwright browsers
        run: |
          cd phialo-design
          pnpm exec playwright install chromium webkit

      - name: Set BrowserStack config file
        id: bs-config
        run: |
          if [[ "${{ matrix.project }}" == "Chrome@latest-Windows" ]]; then
            echo "config_file=browserstack-chrome.yml" >> $GITHUB_OUTPUT
          elif [[ "${{ matrix.project }}" == "Safari@latest-macOS" ]]; then
            echo "config_file=browserstack-safari.yml" >> $GITHUB_OUTPUT
          elif [[ "${{ matrix.project }}" == "iPhone-14-Pro" ]]; then
            echo "config_file=browserstack-iphone.yml" >> $GITHUB_OUTPUT
          else
            echo "config_file=browserstack.yml" >> $GITHUB_OUTPUT
          fi

      - name: Run BrowserStack tests
        run: |
          cd phialo-design
          # Use specific config file for this browser
          cp ${{ steps.bs-config.outputs.config_file }} browserstack.yml
          pnpm run test:browserstack:smoke
        env:
          BROWSERSTACK_USERNAME: ${{ secrets.BROWSERSTACK_USERNAME }}
          BROWSERSTACK_ACCESS_KEY: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
          BUILD_ID: pr-${{ github.event.pull_request.number || github.event.inputs.pr_number }}-${{ github.run_number }}
          BROWSERSTACK_BUILD_NAME: 'PR #${{ github.event.pull_request.number || github.event.inputs.pr_number }}'
          BROWSERSTACK_PROJECT_NAME: 'Phialo Design'
          TEST_SESSION_NAME: 'PR #${{ github.event.pull_request.number || github.event.inputs.pr_number }} - ${{ matrix.project }}'
          BASE_URL: ${{ github.event.deployment_status.target_url || '' }}

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: browserstack-pr-results-${{ matrix.project }}
          path: |
            phialo-design/browserstack-report/
            phialo-design/browserstack-results.json
            phialo-design/test-results/
          retention-days: 7

  report:
    name: PR Test Report
    needs: [should-run, test]
    runs-on: ubuntu-latest
    if: always() && needs.should-run.outputs.should_run == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: all-results

      - name: Create PR comment
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            // Check test results
            const browsers = ['Chrome@latest-Windows', 'Safari@latest-macOS', 'iPhone-14-Pro'];
            let allPassed = true;
            let resultsTable = '| Browser | Status |\n|---------|--------|\n';
            
            for (const browser of browsers) {
              const resultDir = path.join('all-results', `browserstack-pr-results-${browser}`);
              if (fs.existsSync(resultDir)) {
                resultsTable += `| ${browser} | ✅ Passed |\n`;
              } else {
                resultsTable += `| ${browser} | ❌ Failed |\n`;
                allPassed = false;
              }
            }
            
            const status = allPassed ? '✅ **All BrowserStack tests passed!**' : '❌ **Some BrowserStack tests failed**';
            
            const comment = `## BrowserStack Test Results
            
            ${status}
            
            ${resultsTable}
            
            **Test Configuration:**
            - Test filter: \`@critical\`
            - Parallel sessions: 3 of 5 available
            - Run ID: [#${{ github.run_number }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
            
            [View detailed results in BrowserStack Dashboard](https://automate.browserstack.com/)
            
            ---
            *To re-run tests, add the \`run-browserstack\` label again or trigger manually from Actions.*`;
            
            // Find and update existing comment or create new one
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('BrowserStack Test Results')
            );
            
            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: comment
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: comment
              });
            }

      - name: Remove label after completion
        if: github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'run-browserstack')
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.removeLabel({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              name: 'run-browserstack'
            });