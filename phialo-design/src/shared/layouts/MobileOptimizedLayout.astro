---
import { SEO } from "astro-seo";
import { ClientRouter } from "astro:transitions";
import SmoothScroll from '../components/effects/SmoothScroll';
import '../../styles/global.css';
import '../../styles/mobile-optimizations.css';

export interface Props {
  title: string;
  description?: string;
  image?: string;
  noindex?: boolean;
  lang?: string;
  preloadImages?: string[]; // Array of critical image URLs to preload
  priorityImageSrc?: string; // LCP image to preload with high priority
}

// First destructure props to get lang
const {
  title,
  image = "/social/og-default.jpg",
  noindex = false,
  lang = "de",
  preloadImages = [],
  priorityImageSrc
} = Astro.props;

// Get Cloudflare Analytics token from environment variable
const analyticsToken = import.meta.env.PUBLIC_CLOUDFLARE_ANALYTICS_TOKEN;

// Default descriptions based on language
const defaultDescriptions = {
  de: "Phialo Design - Wo Schmuck auf Innovation trifft. 3D Design, individuelle Kreationen und Expertise in der Schmuckherstellung.",
  en: "Phialo Design - Where jewelry meets innovation. 3D design, individual creations and expertise in jewelry manufacturing."
};

// Set description with fallback
const description = Astro.props.description || defaultDescriptions[lang as keyof typeof defaultDescriptions] || defaultDescriptions.de;

const canonicalURL = new URL(Astro.url.pathname, Astro.site);
const socialImageURL = new URL(image, Astro.url).href;

// Generate alternate language URLs for hreflang
const currentPath = Astro.url.pathname;
const isEnglish = currentPath.startsWith('/en/');
const basePath = isEnglish ? currentPath.replace(/^\/en/, '') || '/' : currentPath;
const germanUrl = new URL(basePath, Astro.site).href;
const englishUrl = new URL('/en' + basePath, Astro.site).href;

// Detect if we're on a mobile device (server-side)
const userAgent = Astro.request.headers.get('user-agent') || '';
const isMobile = /Mobile|Android|iPhone|iPad/i.test(userAgent);
---

<!DOCTYPE html>
<html lang={lang} class="scroll-smooth">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, viewport-fit=cover" />
    <meta name="generator" content={Astro.generator} />
    
    <!-- Mobile-specific meta tags -->
    <meta name="mobile-web-app-capable" content="yes" />
    <meta name="apple-mobile-web-app-capable" content="yes" />
    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent" />
    <meta name="format-detection" content="telephone=no" />
    
    <!-- Critical Resource Hints -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    {Astro.site && <link rel="preconnect" href={Astro.site.origin} />}
    
    <!-- DNS Prefetch for external resources -->
    <link rel="dns-prefetch" href="https://cdn.cloudflare.com" />
    
    <!-- Priority Image Preload (LCP optimization) -->
    {priorityImageSrc && (
      <link 
        rel="preload" 
        as="image" 
        href={priorityImageSrc}
        fetchpriority="high"
        type="image/jpeg"
      />
    )}
    
    <!-- Additional critical images preload (mobile-only) -->
    {isMobile && preloadImages.slice(0, 2).map(imgSrc => (
      <link 
        rel="preload" 
        as="image" 
        href={imgSrc}
        fetchpriority="low"
        type="image/jpeg"
      />
    ))}
    
    <!-- Font Preloading with display=swap for better performance -->
    <link rel="preload" href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&display=swap" as="style" />
    <link rel="preload" href="https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;500;600&display=swap" as="style" />
    
    <!-- Critical CSS inline for faster FCP -->
    <style>
      /* Critical CSS for above-the-fold content */
      :root {
        --color-midnight: #0A192F;
        --color-gold: #D4AF37;
      }
      
      /* Prevent FOUC */
      body {
        opacity: 0;
        transition: opacity 0.3s ease-in-out;
      }
      
      body.loaded {
        opacity: 1;
      }
      
      /* Loading skeleton styles */
      .skeleton {
        background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
        background-size: 200% 100%;
        animation: loading 1.5s infinite;
      }
      
      @keyframes loading {
        0% { background-position: 200% 0; }
        100% { background-position: -200% 0; }
      }
      
      /* Aspect ratio for images to prevent CLS */
      img {
        aspect-ratio: attr(width) / attr(height);
      }
    </style>
    
    <!-- Google Fonts with swap and optional -->
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&display=swap" media="print" onload="this.media='all'" />
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;500;600&display=swap" media="print" onload="this.media='all'" />
    
    <!-- Fallback for browsers without onload support -->
    <noscript>
      <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&display=swap" />
      <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;500;600&display=swap" />
    </noscript>
    
    <!-- Favicon and App Icons -->
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
    <link rel="manifest" href="/site.webmanifest" />
    <link rel="sitemap" href="/sitemap-index.xml" />
    
    <SEO
      title={title}
      description={description}
      canonical={canonicalURL}
      noindex={noindex}
      openGraph={{
        basic: {
          title: title,
          type: "website",
          image: socialImageURL,
        },
        optional: {
          description: description,
          siteName: "Phialo Design",
        },
      }}
      twitter={{
        creator: "@phialodesign",
        site: "@phialodesign",
        card: "summary_large_image",
      }}
      extend={{
        link: [
          { rel: "alternate", hreflang: "de", href: germanUrl },
          { rel: "alternate", hreflang: "en", href: englishUrl },
          { rel: "alternate", hreflang: "x-default", href: germanUrl }
        ],
        meta: [
          { name: "twitter:image", content: socialImageURL },
          { name: "twitter:title", content: title },
          { name: "twitter:description", content: description },
          { name: "theme-color", content: "#0A192F" },
        ],
      }}
    />
    
    <!-- Structured Data for Rich Results -->
    <script type="application/ld+json">
      {JSON.stringify({
        "@context": "https://schema.org",
        "@type": "JewelryStore",
        "name": "Phialo Design",
        "description": description,
        "url": canonicalURL,
        "logo": new URL("/logo.png", Astro.site).href,
        "sameAs": [
          "https://www.instagram.com/phialodesign",
          "https://www.facebook.com/phialodesign"
        ]
      })}
    </script>
  </head>
  <body>
    <!-- Instant page visibility while content loads -->
    <script>
      // Mark body as loaded immediately to prevent FOUC
      document.body.classList.add('loaded');
      
      // Prefetch links on hover/touchstart for instant navigation
      if ('requestIdleCallback' in window) {
        requestIdleCallback(() => {
          const links = document.querySelectorAll('a[href^="/"]');
          links.forEach(link => {
            link.addEventListener('mouseenter', () => {
              const href = link.getAttribute('href');
              if (href && !document.querySelector(`link[rel="prefetch"][href="${href}"]`)) {
                const prefetchLink = document.createElement('link');
                prefetchLink.rel = 'prefetch';
                prefetchLink.href = href;
                document.head.appendChild(prefetchLink);
              }
            }, { passive: true });
          });
        });
      }
    </script>
    
    <ClientRouter />
    <SmoothScroll client:load />
    <slot />
    
    <!-- Cloudflare Web Analytics (loaded asynchronously) -->
    {analyticsToken && (
      <script
        defer
        src="https://static.cloudflareinsights.com/beacon.min.js"
        data-cf-beacon={`{"token": "${analyticsToken}"}`}
      ></script>
    )}
    
    <!-- Service Worker for offline support and caching -->
    <script>
      if ('serviceWorker' in navigator && !navigator.userAgent.includes('Lighthouse')) {
        window.addEventListener('load', () => {
          navigator.serviceWorker.register('/sw.js').catch(() => {});
        });
      }
    </script>
  </body>
</html>