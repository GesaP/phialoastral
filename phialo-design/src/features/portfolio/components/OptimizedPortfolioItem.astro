---
import { Image } from 'astro:assets';
import type { PortfolioItemData } from './PortfolioSection';

interface Props {
  item: PortfolioItemData;
  index: number;
  lang?: 'en' | 'de';
  class?: string;
}

const { item, index, lang = 'de', class: className } = Astro.props;
const isEnglish = lang === 'en';

// Determine if this is likely the LCP image (first 3 items on mobile, first 6 on desktop)
const isPriority = index < 3;

// Extract base name from image path for modern format generation
const imagePath = item.image;
const baseName = imagePath.replace('/images/portfolio/', '').replace(/\.(jpg|jpeg|png)$/i, '');

// Generate srcset for different sizes
const sizes = [320, 400, 640, 800, 1024, 1200, 1600, 2000];
const webpSrcset = sizes.map(w => `/images/portfolio/${baseName}-${w}w.webp ${w}w`).join(', ');
const avifSrcset = sizes.filter(w => w >= 800).map(w => `/images/portfolio/${baseName}-${w}w.avif ${w}w`).join(', ');

// Translations for accessibility
const cardLabel = isEnglish 
  ? `Portfolio item: ${item.title}. Category: ${item.category}. Press Enter or Space to view details.`
  : `Portfolio-Element: ${item.title}. Kategorie: ${item.category}. Dr√ºcken Sie Enter oder Leertaste, um Details anzuzeigen.`;
---

<div
  class={`portfolio-item-wrapper ${className || ''}`}
  data-testid="portfolio-item"
  data-item-id={item.id}
  data-item-index={index}
>
  <div class="portfolio-item-container relative overflow-hidden rounded-lg bg-gray-100 aspect-[4/5]">
    <!-- Use picture element for modern formats with fallback -->
    <picture>
      <!-- AVIF for browsers that support it (best compression) -->
      {avifSrcset && (
        <source
          type="image/avif"
          srcset={avifSrcset}
<<<<<<< HEAD
          sizes="(max-width: 640px) 100vw, (max-width: 768px) 384px, (max-width: 1024px) 340px, (max-width: 1280px) 310px, 400px"
=======
          sizes="(max-width: 640px) 100vw, (max-width: 1024px) 50vw, 33vw"
>>>>>>> origin/master
        />
      )}
      
      <!-- WebP for modern browsers -->
      <source
        type="image/webp"
        srcset={webpSrcset}
<<<<<<< HEAD
        sizes="(max-width: 640px) 100vw, (max-width: 768px) 384px, (max-width: 1024px) 340px, (max-width: 1280px) 310px, 400px"
=======
        sizes="(max-width: 640px) 100vw, (max-width: 1024px) 50vw, 33vw"
>>>>>>> origin/master
      />
      
      <!-- Fallback to original format -->
      <img
        src={imagePath}
        alt={`${item.title} - ${item.category}`}
        class="portfolio-item-image w-full h-full object-cover"
        loading={isPriority ? 'eager' : 'lazy'}
        decoding={isPriority ? 'sync' : 'async'}
        fetchpriority={isPriority ? 'high' : 'auto'}
        width="800"
        height="1000"
      />
    </picture>
    
    <!-- Overlay for hover effect -->
    <div class="portfolio-item-overlay absolute inset-0 bg-gradient-to-t from-midnight/80 via-midnight/20 to-transparent opacity-0 transition-opacity duration-300 pointer-events-none">
      <div class="absolute bottom-0 left-0 right-0 p-6 text-white">
        <div class="bg-black/50 rounded-lg p-4 backdrop-blur-sm">
          <h3 class="font-display text-3xl font-medium mb-2">{item.title}</h3>
          <p class="text-lg text-white/90">{item.category}</p>
        </div>
      </div>
    </div>
  </div>
</div>

<style>
  /* Performance optimizations */
  .portfolio-item-wrapper {
    /* CSS containment for better performance */
    contain: layout style paint;
    /* Prepare for potential transforms */
    will-change: auto;
  }

  .portfolio-item-container {
    /* Ensure smooth transitions */
    transition: transform 0.3s ease-out, box-shadow 0.3s ease-out;
  }

  /* Hover effects - CSS-only for better performance */
  .portfolio-item-wrapper:hover .portfolio-item-container,
  .portfolio-item-wrapper:focus-within .portfolio-item-container {
    transform: translateY(-4px);
    box-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);
  }

  .portfolio-item-wrapper:hover .portfolio-item-image,
  .portfolio-item-wrapper:focus-within .portfolio-item-image {
    transform: scale(1.05);
  }

  .portfolio-item-wrapper:hover .portfolio-item-overlay,
  .portfolio-item-wrapper:focus-within .portfolio-item-overlay {
    opacity: 1;
  }

  .portfolio-item-image {
    transition: transform 0.3s ease-out;
  }

  /* Respect reduced motion preferences */
  @media (prefers-reduced-motion: reduce) {
    .portfolio-item-container,
    .portfolio-item-image,
    .portfolio-item-overlay {
      transition: none !important;
      animation: none !important;
    }
    
    .portfolio-item-wrapper:hover .portfolio-item-container,
    .portfolio-item-wrapper:focus-within .portfolio-item-container {
      transform: none;
    }
    
    .portfolio-item-wrapper:hover .portfolio-item-image,
    .portfolio-item-wrapper:focus-within .portfolio-item-image {
      transform: none;
    }
  }

  /* Mobile-specific optimizations */
  @media (max-width: 768px) {
    .portfolio-item-wrapper {
      /* Reduce containment on mobile for better memory usage */
      contain: layout style;
    }
  }
</style>